name: Sync charts to site

on:
  workflow_dispatch:
  schedule:
    # JST: 06:50 / 12:50 / 15:50 / 21:50（= UTC: 21:50 / 03:50 / 06:50 / 12:50）
    - cron: "50 21,3,6,12 * * *"

permissions:
  contents: write

# 同時実行を避ける（手動実行とスケジュールが重なった時の競合防止）
concurrency:
  group: sync-charts
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout site repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Prepare folders (backup current)
        run: |
          mkdir -p docs/charts
          mkdir -p .cache_old
          rsync -a docs/charts/ .cache_old/ || true

      - name: Download charts from sub-repos (RAW)
        shell: bash
        run: |
          set -euo pipefail

          # -------- リポジトリ → プレフィックスの対応表 --------
          #   <表示用キー> <owner/repo> <ファイル接頭辞>
          MAP=(
            "ASTRA4 SakuraIndex/3_Sakura_Space astra4"
            "SCOIN  SakuraIndex/S-COIN-        scoin_plus"
            "RBANK9 SakuraIndex/R-BANK9        rbank9"
            "AIN10  SakuraIndex/AIN-10         ain10"
          )

          # -------- 必須のチャート/データの後ろ側（拡張子含む） --------
          # 存在しないものは curl 失敗 → スキップ にする
          SUFFIXES=(
            "_1d.png" "_7d.png" "_1m.png" "_1y.png"     # 4つの時間軸PNG
            "_intraday.png"                             # 当日1日PNG（あれば）
            "_chart.png"                                # 旧/互換ファイル（あれば）
            "_history.csv"                              # 履歴CSV（あれば）
            "_intraday.csv"                             # 当日CSV（あれば）
            "_post_intraday.txt"                        # 当日メモ（あれば）
            "_latest.txt"                               # 最新値メモ（あれば）
          )

          mkdir -p docs/charts

          # -------- 取得実行 --------
          for line in "${MAP[@]}"; do
            read -r KEY REPO PREFIX <<<"$line"
            echo "=== Fetch from $REPO (prefix=$PREFIX) ==="
            for suf in "${SUFFIXES[@]}"; do
              f="${PREFIX}${suf}"
              url="https://raw.githubusercontent.com/${REPO}/main/docs/outputs/${f}"
              out="docs/charts/${f}"
              if curl -fsSL --retry 2 --retry-delay 1 "$url" -o "$out"; then
                echo " OK  ${f}"
              else
                rm -f "$out" || true
                echo " --  skip ${f}"
              fi
            done
          done

      - name: List after
        run: |
          echo "----- docs/charts -----"
          ls -al docs/charts || true

      - name: Commit & Push if changed
        run: |
          if diff -qr .cache_old docs/charts >/dev/null 2>&1; then
            echo "No changes in charts."
            exit 0
          fi

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/charts
          git commit -m "chore(site): sync latest charts (1d/7d/1m/1y + extras)"
          git push
